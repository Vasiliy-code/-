
Процедура ОбработкаПроведения(Отказ, Режим)
	
	
	Если Не ЗначениеЗаполнено(Основание) Тогда
		Движения.ЗаказыКлиентов.Записывать = Ложь;
		Иначе
    Движения.ЗаказыКлиентов.Записывать = Истина;  
КонецЕсли;

    Движения.Продажи.Записывать = Истина;
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.УчетЗатрат.Записывать = Истина;
	
	Движения.ЗаказыКлиентов.Записать();
	Движения.Продажи.Записать();
	Движения.ТоварыНаСкладах.Записать();
	Движения.УчетЗатрат.Записать(); 
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Товар");
	Блокировка.Заблокировать();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТоваровИУслугТовары.Товар КАК Товар,
	               |	СУММА(РеализацияТоваровИУслугТовары.Количество) КАК Количество,
	               |	СУММА(РеализацияТоваровИУслугТовары.Сумма) КАК Сумма,
	               |	РеализацияТоваровИУслугТовары.Ссылка.Склад КАК Склад
	               |ПОМЕСТИТЬ ВТ_Товары
	               |ИЗ
	               |	Документ.РеализацияТоваровИУслуг.Товары КАК РеализацияТоваровИУслугТовары
	               |ГДЕ
	               |	РеализацияТоваровИУслугТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияТоваровИУслугТовары.Товар,
	               |	РеализацияТоваровИУслугТовары.Ссылка.Склад
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РеализацияТоваровИУслугУслуги.Услуга,
	               |	СУММА(1),
	               |	СУММА(РеализацияТоваровИУслугУслуги.Стоимость),
	               |	NULL
	               |ИЗ
	               |	Документ.РеализацияТоваровИУслуг.Услуги КАК РеализацияТоваровИУслугУслуги
	               |ГДЕ
	               |	РеализацияТоваровИУслугУслуги.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияТоваровИУслугУслуги.Услуга
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Товар
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.СрокГодности, ДАТАВРЕМЯ(1, 1, 1)) КАК СрокГодности,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
	               |	ВТ_Товары.Товар КАК Товар,
	               |	ВТ_Товары.Количество КАК КоличествоВДокументе,
	               |	ВТ_Товары.Товар.Представление КАК ТоварПредставление,
	               |	ВТ_Товары.Сумма КАК СуммаВДокументе,
	               |	ВТ_Товары.Товар.СтатьяЗатрат КАК СтатьяЗатрат,
	               |	ВТ_Товары.Склад КАК Склад,
	               |	ВЫБОР
	               |		КОГДА ВТ_Товары.Товар.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК ЭтоТовар
	               |ИЗ
	               |	ВТ_Товары КАК ВТ_Товары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |				&МоментВремени,
	               |				(Номенклатура, Склад) В
	               |					(ВЫБРАТЬ
	               |						ВТ_Товары.Товар,
	               |						ВТ_Товары.Склад
	               |					ИЗ
	               |						ВТ_Товары КАК ВТ_Товары)) КАК ТоварыНаСкладахОстатки
	               |		ПО ВТ_Товары.Товар = ТоварыНаСкладахОстатки.Номенклатура
	               |			И ВТ_Товары.Склад = ТоварыНаСкладахОстатки.Склад
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Товары.Товар,
	               |	ВТ_Товары.Количество,
	               |	ВТ_Товары.Товар.Представление,
	               |	ВТ_Товары.Сумма,
	               |	ВТ_Товары.Товар.СтатьяЗатрат,
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0),
	               |	ЕСТЬNULL(ТоварыНаСкладахОстатки.СрокГодности, ДАТАВРЕМЯ(1, 1, 1)),
	               |	ВТ_Товары.Склад,
	               |	ВЫБОР
	               |		КОГДА ВТ_Товары.Товар.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СрокГодности
	               |ИТОГИ
	               |	СУММА(КоличествоОстаток),
	               |	МАКСИМУМ(КоличествоВДокументе),
	               |	МАКСИМУМ(СуммаВДокументе)
	               |ПО
	               |	Товар";
	
				   
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
    Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	
	ВыборкаНоменклатура = 
    Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
    Пока ВыборкаНоменклатура.Следующий() Цикл  
    Если ВыборкаНоменклатура.ЭтоТовар Тогда  

        СтоимостьОбщая = 0;  

        Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток; 
		Если Превышение > 0 Тогда  
            Сообщение = Новый СообщениеПользователю;
            Сообщение.Текст = СтрШаблон(" Запрет проведения при отрицательных остатках ""%1""  в количестве ""%2""", ВыборкаНоменклатура.ТоварПредставление, Превышение);
            Сообщение.Сообщить();
			Запрет = Константы.ЗапретПроведенияПриОтрицательныхОстатках.Получить();
			Если Запрет = Истина Тогда
            Отказ = Истина;
		Иначе
			Отказ = Ложь;
			КонецЕсли;
        КонецЕсли;

		Если Отказ Тогда  
		    Продолжить;
		КонецЕсли;

        ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе;  
        ВыборкаДетальные = ВыборкаНоменклатура.Выбрать();
        Пока ВыборкаДетальные.Следующий() И ОсталосьСписать > 0 Цикл  
            Списываем = Мин (ВыборкаДетальные.КоличествоОстаток, ОсталосьСписать);

            Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
            Движение.Период = Дата;
            Движение.Номенклатура = ВыборкаДетальные.Товар;
			Движение.Склад = Склад;
            Движение.СрокГодности = ВыборкаДетальные.СрокГодности;
            Движение.Количество = Списываем;
			
			// Если Списываем = ВыборкаДетальные.КоличествоОстаток Тогда 
			//    Движение.Сумма = ВыборкаДетальные.СуммаОстаток;
			//Иначе
			//    Движение.Сумма = Списываем / ВыборкаДетальные.КоличествоОстаток * ВыборкаДетальные.СуммаОстаток;
			//КонецЕсли;

			ОсталосьСписать = ОсталосьСписать - Списываем; 
			//СтоимостьОбщая = СтоимостьОбщая + Движение.Сумма;

        КонецЦикла;
		
		Движение = Движения.УчетЗатрат.Добавить(); 
		Движение.Период = Дата;
        Движение.СтатьяЗатрат = ВыборкаНоменклатура.СтатьяЗатрат;
        Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
		
		Иначе
       
    
        Движение = Движения.ЗаказыКлиентов.Добавить();  
        Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
        Движение.Период = Дата;
        Движение.Клиент = Клиент;
        Движение.ЗаписьКлиента = Основание;
        Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
        КонецЕсли;
     
        Движение = Движения.Продажи.Добавить();  
        Движение.Период = Дата;
        Движение.Номенклатура = ВыборкаНоменклатура.Товар;
        Движение.Сотрудник = Сотрудник;
        Движение.Клиент = Клиент;
		Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;       
	КонецЦикла;

КонецПроцедуры

